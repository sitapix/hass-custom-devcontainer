name: build-verify-push

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
  workflow_dispatch:

env:
  IMAGE_NAME: sitayo/hass-custom-devcontainer

jobs:
  build-verify:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Restore build cache
        uses: actions/cache@v4
        with:
          path: |
            /tmp/.buildx-cache
          key: buildx-${{ runner.os }}-${{ hashFiles('Dockerfile') }}-${{ hashFiles('.github/workflows/build-and-push-image.yml') }}
          restore-keys: |
            buildx-${{ runner.os }}-

      - name: Meta (compute tags)
        id: meta
        run: |
          set -euo pipefail
          TAGS="${IMAGE_NAME}:sha-${GITHUB_SHA::7}"
          if [[ "${GITHUB_REF}" == refs/heads/sitayo ]]; then
            TAGS+=$'\n'"${IMAGE_NAME}:latest"
          fi
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION_TAG=${GITHUB_REF#refs/tags/}
            TAGS+=$'\n'"${IMAGE_NAME}:${VERSION_TAG}"
          fi
          echo "Computed tags:"; echo "$TAGS" | sed 's/^/  /'
          # space separated for build-push-action
          echo "tags=$(echo $TAGS | tr '\n' ' ')" >> "$GITHUB_OUTPUT"
          # primary tag = first line
          PRIMARY=$(printf '%s\n' "$TAGS" | head -n1)
          echo "primary_tag=$PRIMARY" >> "$GITHUB_OUTPUT"

      - name: Docker login (only when push eligible)
        if: >-
          (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/sitayo')) ||
          (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
          (github.event_name == 'workflow_dispatch')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image (no push yet)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move build cache
        # Persist new cache after successful build
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Verify (readiness script)
        run: |
          chmod +x scripts_verify_image.sh scripts_ready_check.sh || true
          ./scripts_verify_image.sh --tag ${{ steps.meta.outputs.primary_tag }} --timeout 420 --log --json || (echo 'Verification failed' >&2; exit 1)

      - name: Re-build & push (only after verify)
        if: >-
          (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/sitayo')) ||
          (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
          (github.event_name == 'workflow_dispatch')
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-final,mode=max

      - name: Summary
        if: always()
        run: |
          echo "Image tags: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "Event: $GITHUB_EVENT_NAME Ref: $GITHUB_REF" >> $GITHUB_STEP_SUMMARY
